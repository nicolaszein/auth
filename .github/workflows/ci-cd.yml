name: CI/CD

env:
  AWS_DEFAULT_REGION: "us-east-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

on: push

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    services:
      postgres:
        image: "postgres"
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'postgres'
          POSTGRES_DB: 'auth_test'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - run: pip install -r requirements.txt
      - run: pip install -r requirements_test.txt
      - run: pytest -v
        env:
            DATABASE_URL: postgresql://postgres:postgres@localhost:5432/auth_test

  deploy-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Install serverless
        shell: bash
        run: |
          npm i -g serverless
          npm install
      - run: serverless deploy -s production

  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v3
      - name: Install serverless
        shell: bash
        run: |
          npm i -g serverless
          npm install
      - run: serverless deploy -s staging
